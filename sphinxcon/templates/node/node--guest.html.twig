{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% extends "node.html.twig" %}

  {% block title %}
      {% if not page %}
          <a name="{{ label|render|striptags|lower|replace({' ': '-'})|trim }}" rel="bookmark"></a>
      {% endif %}
      {{ title_prefix }}
      {% if not page %}
          <h2{{ title_attributes }}>
              {{ label }}
          </h2>
      {% endif %}
      {{ title_suffix }}
  {% endblock %}

{# Update the Content block layout #}
{% block content %}
    {# photo and info block for mobile phones (< 768 wide)#}
    <div class="photo-and-info">
        <div class="col-xs-6 text-center info">
            <div class="h2">
                <small>{% if content.field_guest_type_prefix|render|trim is not empty %}{{ content.field_guest_type_prefix|render|striptags }} {% endif %}{{ content.field_guest_type|render|striptags }}</small>
            </div>
            <div class="h2">{{ label }}</div>
            {% if content.field_guest_for|render|striptags|trim == 'Axacon' %}
                {% if content.field_project|render|trim is not empty %}
                    <span class="lead text-center">{{ content.field_project|render }}</span>
                {% endif %}
                {% if content.field_axacon_titles|render|trim is not empty %}
                    <span class="lead axaon-padding text-center">{{ content.field_axacon_titles|render }}</span>&nbsp;
                {% endif %}
            {% else %}
            <div class="known-for">{{ content.field_known_for }}</div>
            {% endif %}
            <div class="socialmedia">
                {{ content.field_website }}
                {{ content.field_twitter }}
                {{ content.field_facebook_page }}
                {{ content.field_instagram }}
                {{ content.field_youtube }}
            </div>
        </div>
        <div class="col-xs-6 photo">
            {% set make_img_responsive = true %}
            <a href="{{ url }}" rel="bookmark">{{ content.field_photo }}</a>
        </div>
    </div>
    <div class="biography">
        <div class="col-xs-12">
            {{ content.body }}
        </div>
    </div>
    {% set has_pictures =
        (content.field_additional_image_1 is not empty) and
        (content.field_additional_image_2 is not empty) and
        (content.field_additional_image_3 is not empty) %}
    {% if has_pictures %}
        <div class="pictures">
            {% if content.field_additional_image_1 %}
                <div class="col-xs-4">
                    {{ content.field_additional_image_1 }}
                </div>
            {% endif %}
            {% if content.field_additional_image_2 %}
                <div class="col-xs-4">
                    {{ content.field_additional_image_2 }}
                </div>
            {% endif %}
            {% if content.field_additional_image_3 %}
                <div class="col-xs-4">
                    {{ content.field_additional_image_3 }}
                </div>
            {% endif %}
        </div>
    {% endif %}
{% endblock %}
