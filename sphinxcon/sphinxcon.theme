<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

function sphinxcon_theme_suggestions_block_alter(&$suggestions, $variables) {
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('sphinxcon_', 'bootstrap_', $suggestion);
  }
}

/**
 * Override the Default Search Form
 */
function sphinxcon_form_search_block_form_alter(&$form, &$form_state) {
//  $form['actions']['submit']['#value'] = html_entity_decode('&#xf002;');
//  $form['actions']['submit']['#attributes']['class'][] = 'search-button';
  
  // remove size setting
  unset($form['keys']['#size']);
  
  // remove the search action buttons
  unset($form['actions']);
}

/**
 * Define theme specific settings options
 */
function sphinxcon_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface &$form_state) {
  // Work-around for a core bug affecting admin themes. See issue #943212.
  if (isset($form_id)) {
    return;
  }

  $form['sphinxcon_year'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Year'),
    '#default_value' => theme_get_setting('sphinxcon_year'),
    '#description'   => t("The four-digit year when the upcoming SphinxCon event happens."),
  );

  $form['sphinxcon_dates'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Dates'),
    '#default_value' => theme_get_setting('sphinxcon_dates'),
    '#description'   => t("The dates of the upcoming SphinxCon event in the format 'Month ##-##, Year'"),
  );

  $form['sphinxcon_location'] = array(
    '#type'          => 'textfield',
    '#title'         => t('Location'),
    '#default_value' => theme_get_setting('sphinxcon_location'),
    '#description'   => t("The location where the upcoming SphinxCon will occur in the format 'City, ST'"),
  );
}

/**
 * Make the theme settings defined above available to twig files as variables
 */
function sphinxcon_preprocess_page(&$variables) {
  $variables['sphinxcon_year'] = theme_get_setting('sphinxcon_year');
  $variables['sphinxcon_dates'] = theme_get_setting('sphinxcon_dates');
  $variables['sphinxcon_location'] = theme_get_setting('sphinxcon_location');
}

function sphinxcon_preprocess_html(&$variables) {
  $node = \Drupal::routeMatch()->getParameter('node');
  $variables['background_class'] = 'bg-sphinxcon';
  $variables['blurred_class'] = 'bg-blurred';

  if ($node instanceof \Drupal\node\NodeInterface) {
    if (!empty($node->field_guest_for) && $node->field_guest_for->getValue()[0]['value'] === 'A') {
      $variables['background_class'] = 'bg-axanar';
    }

    if (!empty($node->path) && $node->path->getValue()[0]['alias'] === '/axacon') {
      $variables['blurred_class'] = 'bg-blurred-axanar';
    }
  }
}
